version: '3.9'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - "5672:5672" # основной порт для взаимодействия с сelery
      - "15672:15672" # админка rabbit чтобы открыть в браузере
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  
  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: celery_worker
    restart: always
    depends_on:
      - rabbitmq
      - db
    environment:
      DATABASE_URL: postgresql://user:password@postgres_db:5432/mydatabase
      CELERY_BROKER_URL: pyamqp://guest@rabbitmq//
      CELERY_RESULT_BACKEND: rpc://
      PYTHONPATH: /app  
    working_dir: /app
    command: sh -c "celery -A app.tasks worker --loglevel=info --queues=huge_summarize_queue"

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: my_app
    restart: always
    depends_on:
      - db
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://user:password@postgres_db:5432/mydatabase
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq//
      - CELERY_RESULT_BACKEND=rpc://
      - DEBUG=False # для работы в проде
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./static:/app/static  # прямое монтирование локальной статики
    networks:
      - app_network
    command: ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "app.main:app"] # запуск через гуникорн

  vllm:
    image: vllm/vllm-openai:latest
    container_name: vllm_server
    restart: unless-stopped
    command: >
      --model Vikhrmodels/Vikhr-YandexGPT-5-Lite-8B-it
      --dtype half
      --tensor_parallel_size=2
      --gpu-memory-utilization 0.9
    ipc: host
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    networks:
      - app_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  static:
    image: nginx:latest
    container_name: static_server
    volumes:
      - ./static:/usr/share/nginx/html:ro  # прямое монтирование в nginx
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - app
      - static
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html:ro  # прямое монтирование static
    networks:
      - app_network

volumes:
  pgdata:

networks:
  app_network:

